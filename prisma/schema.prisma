// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id") @db.ObjectId
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  image         String?
  accounts      Account[]
  sessions      Session[]
  Item          Item[]
  Order         Order[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  published   Boolean  @default(false)
  price       Float    @default(1.0)
  quantity    Int      @default(1)
  images      String[]

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
  order  Order[]
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String   @db.ObjectId

  quantity Int
  User     User?   @relation(fields: [userId], references: [id])
  userId   String? @db.ObjectId

  status  Status @default(CART)
  groupId String
}

enum Status {
  CART
  VALIDATION
  APPROVAL
  SHIPMENT
  DELIVERED
}

enum Role {
  USER
  ADMIN
}
